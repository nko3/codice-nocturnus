
module.exports = Test;

function Test() {
  this.passed = 0;
  this.failed = 0;
  this.tests  = [];
  this.timeout = 3000;
};

Test.prototype.fail = function() {
  ++this.failed;
  return '\u2717';
};

Test.prototype.pass = function() {
  ++this.passed;
  return '\u2713';
};

Test.prototype.describe = function(msg, fn) {
  this.tests.push({ msg:msg, fn:fn });
  return this;
};

Test.prototype.done = function() {
  var failed = this.failed;
  var passed = this.passed;
  if (failed > 0) {
    console.log(passed + '/' + (passed+failed) + ' tests passed');
  } else {
    console.log('All ' +  passed + ' tests passed');
  };
};

Test.prototype.init = function() {
  var self = this;
  var tests = this.tests;

  function next() {
    var test = tests.shift();
    if (!!test) {
      var timeout = setTimeout(function() {
        console.log('Timeout exceeded', test.msg);
        process.exit(0);
      }, this.timeout);

      function testCB(err) {
        clearTimeout(timeout);
        var prefix = !! err 
        ? self.fail() 
        : self.pass();
        console.log(prefix, test.msg);
        next.call(self);
      };

      test.fn.call(this, testCB);

    } else {
      this.done();
    };
  };

  next.call(this);
};

